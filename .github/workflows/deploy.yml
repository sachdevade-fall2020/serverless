name: Deploy lambda workflow

on:
  push:
    branches: [ main ]

jobs:
  deploy:

    # specify runner
    runs-on: ubuntu-latest

    steps:
      # checkout repository
    - name: Checkout repository
      uses: actions/checkout@v2

      # install aws cli
    - name: Install AWS CLI
      run: | 
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install

      # create zip for deployment
    - name: Build application package
      run: | 
        tar \
        --exclude='*.git*' \
        -zvcf lambda-build-${GITHUB_RUN_NUMBER}.tar.gz -T bundle.config
    
      #configure aws credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

      # upload zip to s3 bucket
    - name: Upload package to S3 bucket
      env:
        BUCKET_NAME: ${{ secrets.S3_BUCKET }}
      run: aws s3 cp lambda-build-${GITHUB_RUN_NUMBER}.tar.gz s3://${BUCKET_NAME}

      # codedeploy api call
    - name: Update lambda
      env:
        BUCKET_NAME: ${{ secrets.S3_BUCKET }}
        CODEDEPLOY_APPLICATION: ${{ secrets.CODEDEPLOY_APPLICATION }}
        CODEDEPLOY_DEPLOYMENT_GROUP: ${{ secrets.CODEDEPLOY_DEPLOYMENT_GROUP }}
      run: |
        aws deploy create-deployment \
        --application-name ${CODEDEPLOY_APPLICATION} \
        --deployment-config-name CodeDeployDefault.LambdaAllAtOnce \
        --deployment-group-name ${CODEDEPLOY_DEPLOYMENT_GROUP} \
        --s3-location bucket=${BUCKET_NAME},key=lambda-build-${GITHUB_RUN_NUMBER}.tar.gz,bundleType=tgz \
        --region ${AWS_REGION} \
        --output json